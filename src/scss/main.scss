/*@import 'mobile-direct-message';*/
@import 'variables';
@import url('https://fonts.googleapis.com/css?family=Montserrat:100,400,500,700,900&subset=cyrillic,cyrillic-ext');
@import 'icons';
//all panels
@import 'second_box';
@import 'third_box';
@import 'fourth_box';
@import 'fifth_box';
@import 'six_box';
@import 'seventh_box';
@import 'eighth_box';
@import 'ninth_box';

* {
    color: $main-color;
    font-family: 'Montserrat', sans-serif;
}

@media (min-width: $small-mobile) and (max-width: $pre-mobile) {
   @import 'mobile/main_mobile';
}

@media (min-width: $mobile) and (max-width: $pre-tablet) {
   @import 'mobile/main_mobile';
}


@media (min-width: $tablet) and (max-width: $pre-desktop) {
    @import 'tablets/main-tablet';
}

@media (min-width: $desktop) {
    @import 'desctop/main-desctop';
}

.header-panel {
    &>.row {
        height: inherit;
        position: relative;

        .left-side-box {
            height: inherit;
            position: relative;

        }

        .right-side-box {
            background: linear-gradient(to bottom, $color-gradient-header-srart-left, $color-gradient-header-finish-right);

            .row {
                position: absolute;

                .king-size {
                    font-weight: bold;
                    text-align: right;
                }
            }
        }
    }
}


.footer-panel {
    .media-box {
        .icon-social-instagram {
            background: linear-gradient(to bottom right, $color-gradient-btn-start, $color-gradient-btn-finish);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            color: #0B2349;
        }
    }
}

.logo {
    img {
        width: 100%;
    }
}

.text-color-purple {
    color: $purple;
}

.text-color-purple {
    color: $purple;
}

.text-color-crimson {
    color: $crimson;
}

.text-color-light-gray {
    color: $light-gray;
}

.text-border-crimson {
    color: white;
    text-shadow: $crimson 1px 0px, $crimson 1px 1px, $crimson 0px 1px, $crimson -1px 1px, $crimson -1px 0px, $crimson -1px -1px, $crimson 0px -1px, $crimson 1px -1px;
}

.text-border-purple {
    color: white;
    text-shadow: $text-border-purple 1px 0px, $text-border-purple 1px 1px, $text-border-purple 0px 1px, $text-border-purple -1px 1px, $text-border-purple -1px 0px, $text-border-purple -1px -1px, $text-border-purple 0px -1px, $text-border-purple 1px -1px;
}

.text-border-white {
    opacity: 0.3;
    -webkit-background-clip: text;
    -webkit-text-fill-color: $color-gradient-header-srart-right;
    text-shadow: white 1px 0px, white 1px 1px, white 0px 1px, white -1px 1px, white -1px 0px, white -1px -1px, white 0px -1px, white 1px -1px;
}

.font-size-10 {
    font-size: 10px;
}

.font-size-middle {
    font-size: 13px;
}

.btn-transparent {
    background: transparent;
    color: white !important;

    &:hover {
        color: $crimson !important;
    }
}

.btn-gradient {
    color: white !important;
    font-weight: bold;
    border-radius: 4px;
    background-repeat-x: no-repeat;
    background-image: linear-gradient(to right, $color-gradient-btn-start 25%, $color-gradient-btn-finish);

    &:hover {
        color: $crimson !important;
    }
}

.btn-gradient-border {
    border: 3px solid;
    border-image: linear-gradient(to right, #5A37B0 7%, #e90370 56%);
    border-image-slice: 1;
    border-radius: 8px;

    &:hover {
        color: $crimson !important;
    }
}

.btn-lang {
    color: $text-border-purple !important;
    font-weight: bold;

    &.active {
        color: $purple !important;
    }

    &:hover {
        color: $crimson !important;
    }
}

.opst-4 {
    opacity: 0.4;
}

.opst-5 {
    opacity: 0.5;
}

.opst-6 {
    opacity: 0.6;
}

.opst-7 {
    opacity: 0.7;
}

.opst-8 {
    opacity: 0.8;
}

.opst-9 {
    opacity: 0.9;
}


@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
    $f-min: strip-unit($f-min);
    $f-max: strip-unit($f-max);
    $w-min: strip-unit($w-min);
    $w-max: strip-unit($w-max);

    $k: ($f-max - $f-min)/($w-max - $w-min);
    $b: $f-min - $k * $w-min;

    $b: $b + $units;

    @return calc( #{$k} * 100vw + #{$b} );
}